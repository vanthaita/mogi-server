// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id             String       @id @default(uuid())
  familyName     String?
  givenName      String?
  name           String?
  email          String       @unique
  passwordHash   String?
  picture        String?
  providerId     String
  refreshToken   String?      
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  mockInterviews MockInterview[] @relation("UserMockInterviews")
  userAnswers    UserAnswer[]   @relation("UserAnswers")
}

model MockInterview {
  id            String       @id @default(uuid())
  jsonMockResp  String
  jobPosition   String
  jobDesc       String
  jobExperience String
  companyInfo   String?
  interviewLanguage String?
  additionalDetails String?
  is_public     Boolean?  @default(false)
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  userId        String
  user          User         @relation("UserMockInterviews", fields: [userId], references: [id])
  userAnswers   UserAnswer[] @relation("InterviewAnswers")
}

model UserAnswer {
  id            String       @id @default(uuid())
  mockId        String
  question      String
  correctAnswer String
  userAns       String
  feedback      String
  rating        String
  userId        String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  mockInterview MockInterview @relation("InterviewAnswers", fields: [mockId], references: [id])
  user          User         @relation("UserAnswers", fields: [userId], references: [id])
}